#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include <SimpleTimer.h>

char auth[] = "7b076c2a029a43efb954b71f082fe77f"; //insert here your token generated by Blynk 
char ssid[] = "the ssid"; 
char pass[] = "the password"; 

const int btnPin = D1;           //D1 pin for physical push button switch.
const int RelayPin = D4;         //D4 pin for relay output.

BlynkTimer timer;
void checkPhysicalButton();
int btnPinState = LOW;           // ON
int RelayPinState = HIGH;        // OFF

//*******Sets Relays to Off Position*****************
#define TURN_ON 0                 // TURN_ON and TURN_OFF are defined to account for Active High relays
#define TURN_OFF 1                // Used to switch relay states

void setup()
{
	Serial.begin (9600);
	Blynk.begin(auth, ssid, pass);
	pinMode(RelayPin, OUTPUT);            //  initialize your pin as output.
	pinMode(btnPin, INPUT_PULLUP);        //  initialize your pin as input with enable internal pull-up resistor "input_pullup"
	digitalWrite(RelayPin, RelayPinState);
	digitalWrite(RelayPin, TURN_OFF);     // remain off till command is receive

	// Setup a function to be called every 100 ms
	timer.setInterval(100L, checkPhysicalButton);
}

BLYNK_CONNECTED()
{
	// Request the latest state from the server
	Blynk.syncVirtual(V1);
}

// When App button is pushed - switch the state
// Map this Virtual Pin to your Mobile Blynk apps widget.
BLYNK_WRITE(V1)
{                           
	RelayPinState = param.asInt();
	digitalWrite(RelayPin, RelayPinState);
}

void checkPhysicalButton()
{
	if (digitalRead(btnPin) == LOW)
	{
		// btnPinState is used to avoid sequential toggles
		if (btnPinState != LOW)
		{
		// Toggle relay state
		RelayPinState = !RelayPinState;
		digitalWrite(RelayPin, RelayPinState);
		Blynk.virtualWrite(V1, RelayPinState);  //Update button widget
    }
    btnPinState = LOW; 
	}
	else
	{
		btnPinState = HIGH;
	}
}

void loop()
{
	Blynk.run();                               // Run Blynk
	timer.run();                               // Run SimpleTimer
}
